import { createComponent, ref, computed, onBeforeUnmount, watch, onMounted } from '@vue/composition-api';
import ResizeObserverPonyfill from 'resize-observer-polyfill';

var script = createComponent({
  props: {
    elements: Array
  },
  setup: function setup(props) {
    var ResizeObserver = typeof window !== 'undefined' ? window.ResizeObserver || ResizeObserverPonyfill : ResizeObserverPonyfill;
    var slider = ref(null);
    var sliderWidth = ref(0);
    var isMobile = computed(function () {
      return sliderWidth.value < 768;
    });
    var visibleCount = computed(function () {
      return isMobile.value ? 2 : 4;
    });
    var groups = computed(function () {
      var count = Math.ceil(props.elements.length / visibleCount.value);
      var groups = [];

      for (var i = 0; i < count; ++i) {
        groups[i] = [];

        for (var j = 0; j < visibleCount.value; ++j) {
          var element = props.elements[i * visibleCount.value + j];

          if (element) {
            groups[i][j] = element;
          }
        }
      }

      return groups;
    });
    var groupStyles = computed(function () {
      var styles = [];

      for (var i = 0; i < groups.value.length; ++i) {
        var group = groups.value[i];
        styles[i] = {};
        styles[i].width = 100 * (group.length / visibleCount.value) + '%';

        if (activeGroupIndex.value !== i) {
          styles[i].position = 'absolute';
          styles[i].top = '0';
          styles[i].left = -100 * (activeGroupIndex.value || 0) + i * 100 + '%';
        }
      }

      return styles;
    });
    var imgWrapperWidth = computed(function () {
      return sliderWidth.value / visibleCount.value + 'px';
    });
    var activeGroupIndex = ref(null);
    onBeforeUnmount(watch(groups, function (g) {
      return activeGroupIndex.value = 0;
    }));
    var ob = ref(null);
    onMounted(function () {
      ob.value = new ResizeObserver(function () {
        return sliderWidth.value = slider.value.clientWidth;
      });
      ob.value.observe(slider.value);
    });
    onBeforeUnmount(function () {
      return ob.value.disconnect();
    });
    return {
      slider: slider,
      groups: groups,
      activeGroupIndex: activeGroupIndex,
      groupStyles: groupStyles,
      sliderWidth: sliderWidth,
      imgWrapperWidth: imgWrapperWidth
    };
  }
});

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".Slider__groups[data-v-360e4b9b]{\n  position:relative;\n  overflow:hidden;\n}\n\n.Slider__group[data-v-360e4b9b]{\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n}\n\n.Slider__img-wrapper[data-v-360e4b9b]{\n  padding-left:0.5rem;\n  padding-right:0.5rem;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-pack:center;\n      -ms-flex-pack:center;\n          justify-content:center;\n  -webkit-box-align:center;\n      -ms-flex-align:center;\n          align-items:center;\n}\n\n.Slider__img[data-v-360e4b9b]{\n  max-height:7rem\n}\n\n.SliderTransition-enter-active[data-v-360e4b9b],.SliderTransition-leave-active[data-v-360e4b9b],.SliderTransition-move[data-v-360e4b9b]{\n  -webkit-transition:all .5s;\n  transition:all .5s\n}\n\n.SliderTransition-enter[data-v-360e4b9b]{\n  -webkit-transform:translateX(100%);\n          transform:translateX(100%)\n}\n\n.SliderTransition-enter-to[data-v-360e4b9b]{\n  -webkit-transform:none;\n          transform:none\n}\n\n.SliderTransition-leave[data-v-360e4b9b]{\n  -webkit-transform:none;\n          transform:none\n}\n\n.SliderTransition-leave-to[data-v-360e4b9b]{\n  -webkit-transform:translateX(100%);\n          transform:translateX(100%)\n}\n\n.Slider__controls[data-v-360e4b9b]{\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-pack:center;\n      -ms-flex-pack:center;\n          justify-content:center;\n  margin-top:2rem;\n}\n\n.Slider__control[data-v-360e4b9b]{\n  width:1rem;\n  height:1rem;\n  border-radius:9999px;\n  border-width:1px;\n  border-color:#fff;\n  border-style:solid;\n  cursor:pointer;\n  margin-left:0.25rem;\n  margin-right:0.25rem;\n  -webkit-transition:all .15s;\n  transition:all .15s\n}\n\n.Slider__control[data-v-360e4b9b]:hover{\n  background-color:rgba(255,255,255,.5)\n}\n\n.Slider__control.is-active[data-v-360e4b9b]{\n  background-color:#fff;\n}";
styleInject(css);

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier
/* server only */
, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
  if (typeof shadowMode !== 'boolean') {
    createInjectorSSR = createInjector;
    createInjector = shadowMode;
    shadowMode = false;
  } // Vue.extend constructor export interop.


  var options = typeof script === 'function' ? script.options : script; // render functions

  if (template && template.render) {
    options.render = template.render;
    options.staticRenderFns = template.staticRenderFns;
    options._compiled = true; // functional template

    if (isFunctionalTemplate) {
      options.functional = true;
    }
  } // scopedId


  if (scopeId) {
    options._scopeId = scopeId;
  }

  var hook;

  if (moduleIdentifier) {
    // server build
    hook = function hook(context) {
      // 2.3 injection
      context = context || // cached call
      this.$vnode && this.$vnode.ssrContext || // stateful
      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional
      // 2.2 with runInNewContext: true

      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__;
      } // inject component styles


      if (style) {
        style.call(this, createInjectorSSR(context));
      } // register component module identifier for async chunk inference


      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier);
      }
    }; // used by ssr in case component is cached and beforeCreate
    // never gets called


    options._ssrRegister = hook;
  } else if (style) {
    hook = shadowMode ? function () {
      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));
    } : function (context) {
      style.call(this, createInjector(context));
    };
  }

  if (hook) {
    if (options.functional) {
      // register for functional component in vue file
      var originalRender = options.render;

      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context);
        return originalRender(h, context);
      };
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate;
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
    }
  }

  return script;
}

var normalizeComponent_1 = normalizeComponent;

/* script */
var __vue_script__ = script;
/* template */

var __vue_render__ = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('div', {
    ref: "slider",
    staticClass: "Slider"
  }, [_c('transition-group', {
    staticClass: "Slider__groups",
    attrs: {
      "name": "SliderTransition",
      "tag": "div"
    }
  }, [_vm._l(_vm.groups, function (group, i) {
    return [_c('div', {
      key: i,
      staticClass: "Slider__group",
      style: _vm.groupStyles[i]
    }, _vm._l(group, function (element) {
      return _c('div', {
        key: element.name,
        staticClass: "Slider__img-wrapper",
        style: {
          width: _vm.imgWrapperWidth
        }
      }, [_c('img', {
        staticClass: "Slider__img",
        attrs: {
          "src": element.image,
          "alt": element.name
        }
      })]);
    }), 0)];
  })], 2), _vm._v(" "), _c('div', {
    staticClass: "Slider__controls"
  }, _vm._l(_vm.groups, function (group, i) {
    return _c('div', {
      key: i,
      staticClass: "Slider__control",
      class: {
        'is-active': _vm.activeGroupIndex === i
      },
      on: {
        "click": function click($event) {
          _vm.activeGroupIndex = i;
        }
      }
    });
  }), 0)], 1);
};

var __vue_staticRenderFns__ = [];
/* style */

var __vue_inject_styles__ = undefined;
/* scoped */

var __vue_scope_id__ = "data-v-360e4b9b";
/* module identifier */

var __vue_module_identifier__ = undefined;
/* functional template */

var __vue_is_functional_template__ = false;
/* style inject */

/* style inject SSR */

var Slider = normalizeComponent_1({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, undefined, undefined);

function install(Vue) {
  // @ts-ignore
  if (install.installed) {
    return;
  } // @ts-ignore


  install.installed = true; // @ts-ignore

  Vue.component('ImageSlider', Slider);
}

var plugin = {
  install: install
};
var GlobalVue = null;

if (typeof window !== 'undefined') {
  // @ts-ignore
  GlobalVue = window.Vue; // @ts-ignore
} else if (typeof global !== 'undefined') {
  // @ts-ignore
  GlobalVue = global.Vue;
}

if (GlobalVue) {
  GlobalVue.use(plugin);
}

export default Slider;
